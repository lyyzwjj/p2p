<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.base.mapper.VideoAuthMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.VideoAuth" >
    <id column="id" property="id" />
    <result column="state" property="state" />
    <result column="remark" property="remark" />
    <result column="auditTime" property="auditTime" />
    <result column="applyTime" property="applyTime" />
    <result column="orderDate" property="orderDate" />
    <association property="auditor" javaType="cn.wolfcode.p2p.base.domain.LoginInfo" columnPrefix="aud_"
                 resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.SmallResultMap">
    </association>
    <association property="applier" javaType="cn.wolfcode.p2p.base.domain.LoginInfo" columnPrefix="app_"
                 resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.SmallResultMap">
    </association>
    <association property="orderTime" javaType="cn.wolfcode.p2p.base.domain.OrderTime" columnPrefix="ot_">
    <id column="id" property="id"/>
      <result column="begin" property="begin"/>
      <result column="end" property="end"/>
    </association>
  </resultMap>
  <insert id="insert" parameterType="cn.wolfcode.p2p.base.domain.VideoAuth" useGeneratedKeys="true" keyProperty="id" >
    insert into videoauth (state, remark, auditTime, applyTime, auditor_id, applier_id,
      orderTime_id, orderDate)
    values (#{state}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id},
      #{orderTime.id}, #{orderDate})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.base.domain.VideoAuth" >
    update videoauth
    set state = #{state},
      remark = #{remark},
      auditTime = #{auditTime},
      applyTime = #{applyTime},
      auditor_id = #{auditor.id},
      applier_id = #{applier.id},
      orderTime_id = #{orderTime.id},
      orderDate = #{orderDate}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select r.id, r.state, remark, auditTime, applyTime, auditor_id, applier_id, orderTime_id,orderDate,
    aud.id aud_id,aud.username aud_username,
	app.id app_id,app.username app_username,
    ot.id ot_id,ot.begin ot_begin,ot.end ot_end
	from videoauth r
	join loginInfo aud on r.auditor_id = aud.id
	join loginInfo app on r.applier_id = app.id
	join ordertime ot on r.orderTime_id = ot.id
    where r.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select r.id, r.state, remark, auditTime, applyTime, auditor_id, applier_id, orderTime_id,orderDate,
    aud.id aud_id,aud.username aud_username,
	app.id app_id,app.username app_username,
    ot.id ot_id,ot.begin ot_begin,ot.end ot_end
	from videoauth r
	join loginInfo aud on r.auditor_id = aud.id
	join loginInfo app on r.applier_id = app.id
	join ordertime ot on r.orderTime_id = ot.id
  </select>
  <select id="queryData" resultMap="BaseResultMap">
     select r.id, r.state, remark, auditTime, applyTime, auditor_id, applier_id, orderTime_id,orderDate,
    aud.id aud_id,aud.username aud_username,
	app.id app_id,app.username app_username,
    ot.id ot_id,ot.begin ot_begin,ot.end ot_end
	from videoauth r
	join loginInfo aud on r.auditor_id = aud.id
	join loginInfo app on r.applier_id = app.id
	join ordertime ot on r.orderTime_id = ot.id
    <where>
      <if test="beginDate != null">
        and r.applyTime >= #{beginDate}
      </if>
      <if test="endDate != null">
        <![CDATA[ and r.applyTime <= #{endDate} ]]>
      </if>
      <if test="state > -1">
        and r.state = #{state}
      </if>
      <if test="username != null">
        and app.username = #{username}
      </if>
    </where>
  </select>
</mapper>