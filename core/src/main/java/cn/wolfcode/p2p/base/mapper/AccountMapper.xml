<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.p2p.base.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.Account">
        <id column="id" property="id"/>
        <result column="version" property="version"/>
        <result column="tradePassword" property="tradePassword"/>
        <result column="usableAmount" property="usableAmount"/>
        <result column="freezedAmount" property="freezedAmount"/>
        <result column="unReceiveInterest" property="unReceiveInterest"/>
        <result column="unReceivePrincipal" property="unReceivePrincipal"/>
        <result column="unReturnAmount" property="unReturnAmount"/>
        <result column="remainBorrowLimit" property="remainBorrowLimit"/>
        <result column="borrowLimitAmount" property="borrowLimitAmount"/>
    </resultMap>
    <insert id="insert" keyProperty="id" parameterType="cn.wolfcode.p2p.base.domain.Account">
    insert into account (id,version, tradePassword, usableAmount, freezedAmount, unReceiveInterest,
      unReceivePrincipal, unReturnAmount, remainBorrowLimit, borrowLimitAmount
      )
    values (#{id},#{version}, #{tradePassword}, #{usableAmount}, #{freezedAmount}, #{unReceiveInterest},
      #{unReceivePrincipal}, #{unReturnAmount}, #{remainBorrowLimit}, #{borrowLimitAmount}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.base.domain.Account">
    update account
    set
      id = #{id},
      version = version + 1,
      tradePassword = #{tradePassword},
      usableAmount = #{usableAmount},
      freezedAmount = #{freezedAmount},
      unReceiveInterest = #{unReceiveInterest},
      unReceivePrincipal = #{unReceivePrincipal},
      unReturnAmount = #{unReturnAmount},
      remainBorrowLimit = #{remainBorrowLimit},
      borrowLimitAmount = #{borrowLimitAmount}
    where id = #{id} and version = #{version}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, version, tradePassword, usableAmount, freezedAmount, unReceiveInterest, 
    unReceivePrincipal, unReturnAmount, remainBorrowLimit, borrowLimitAmount
    from account
    where id = #{id}
  </select>
</mapper>